# Manipulating Containers with the Docker Client

docker run <image_name> aşağıdaki iki commandin birleşmesinden oluşur
docker create <image_name>
docker start -a <container-id>:detaylı log görmemizi sağlar.
docker run <image_name> <commands>
Listing running containers docker ps
Listing all containers docker ps --all
docker system prune -> remove all
docker logs <container-id>
docker stop <container-id> ,, send sigterm signal to clean up and some preparation like saving files etc.
docker kill <container-id> ,, stop working right now


Executing commands in running containers
docker exec -it <container-id> <command> ,, docker exec -it 4081c97daabd redis-cli

Getting command prompt in a container open shell on running container
docker exec -it <container-id> sh 

docker run -it <image_name> sh then

 docker exec -it 4081c97daabd redis-cli -> redis-cli

# Building Custom İmages Through Docker Server

docker build .

docker build -t <my_docker_id/projectName:version> .

# Making Real Proects with Docker

## Dockerfile Template

1. Specify a base image
2. Run some commands to install additional programs
3. Specify a command to run on container startup

## Copying Build Files

copy <from_folder>  <to_folder> => copy ./ ./

## Container Port Mapping

docker run -p <out_of_container_port>: <container_port> <image_name>



# Docker Compose with Multiple Local Containers

docker run <image_name> => docker-compose up

docker build .

docker run <image_name> => docker-compose up --build

docker-compose up -d => launch in background

docker-compose down => stop containers

restart policies => no, always, on failure